import re

def check_password_strength(password):
    # Initialize strength score
    strength_score = 0
    feedback = []

    # Check length of password
    if len(password) < 8:
        feedback.append("Password is too short. Minimum length should be 8 characters.")
    else:
        strength_score += 1

    # Check for uppercase letters
    if re.search(r'[A-Z]', password):
        strength_score += 1
    else:
        feedback.append("Add uppercase letters to make the password stronger.")

    # Check for lowercase letters
    if re.search(r'[a-z]', password):
        strength_score += 1
    else:
        feedback.append("Add lowercase letters to make the password stronger.")

    # Check for numbers
    if re.search(r'[0-9]', password):
        strength_score += 1
    else:
        feedback.append("Add numbers to make the password stronger.")

    # Check for special characters
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        strength_score += 1
    else:
        feedback.append("Add special characters (e.g., !, @, #) to make the password stronger.")

    # Check for uniqueness (repeated patterns reduce uniqueness)
    if len(set(password)) > len(password) * 0.5:
        strength_score += 1
    else:
        feedback.append("Avoid using too many repeated characters or patterns.")

    # Determine strength level
    if strength_score <= 2:
        strength = "Weak"
    elif strength_score == 3:
        strength = "Moderate"
    else:
        strength = "Strong"

    return strength, feedback

# Main program to test the password strength checker
if __name__ == "__main__":
    password = input("Enter your password: ")
    strength, feedback = check_password_strength(password)

    print(f"Password Strength: {strength}")
    if feedback:
        print("Suggestions:")
        for suggestion in feedback:
            print(f"- {suggestion}")
